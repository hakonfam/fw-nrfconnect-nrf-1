# Copyright (c) 2018 Nordic Semiconductor
#
# SPDX-License-Identifier: LicenseRef-BSD-5-Clause-Nordic
#

menuconfig LIBMODEM
	bool "Enable Modem library"
	imply NRFX_IPC
	imply NET_SOCKETS_OFFLOAD
	imply NET_SOCKETS_POSIX_NAMES
	select NRF_MODEM
	help
	  Use Nordic libmodem library.

if LIBMODEM

config LIBMODEM_SYS_INIT
	bool "Initialize during SYS_INIT"
	default y
	help
	  Initialize libmodem automatically during the SYS_INIT sequence.
	  Please note that libmodem initialization is synchronous and can
	  take up to one minute in case the modem firmware is updated.

config LIBMODEM_TRACE_ENABLED
	bool
	prompt "Enable proprietary traces over UART"
	# Modem tracing over UART use the UARTE1 as dedicated peripheral.
	# This enable UARTE1 peripheral and includes nrfx UARTE driver.
	select NRFX_UARTE1

config NRF91_SOCKET_SEND_SPLIT_LARGE_BLOCKS
	bool "Split large blocks passed to send() or sendto()"
	default n
	help
	  Workaround a limitation in the nRF91 modem firmware's libmodem
	  implementation regarding return value for send() or sendto()
	  calls larger than the module can handle. It should send the data
	  up to the maximum, and return that as the return value. Instead,
	  it returns error 22.

config NRF91_SOCKET_BLOCK_LIMIT
	int "Maximum size the modem can send"
	default 2048
	help
	  Blocks larger than this value will be split into two or more
	  send() or sendto() calls. This may not work for certain kinds
	  of sockets or certain flag parameter values.

config LIBMODEM_SENDMSG_BUF_SIZE
	int "Size of the sendmsg intermediate buffer"
	default 128
	help
	  Size of an intermediate buffer used by `sendmsg` to repack data and
	  therefore limit the number of `sendto` calls. The buffer is created
	  in a static memory, so it does not impact stack/heap usage. In case
	  the repacked message would not fit into the buffer, `sendmsg` sends
	  each message part separately.

endif # LIBMODEM
