#
# Copyright (c) 2018 Nordic Semiconductor ASA
#
# SPDX-License-Identifier: LicenseRef-BSD-5-Clause-Nordic
#

config MCUBOOT_BUILD_S1_VARIANT
	# This can not depend on BOOTLOADER_MCUBOOT, or NSB_BOOTLOADER as this
	# option has to be set when building MCUBoot itself. Instead an error
	# is raised by CMake if an incorrect configuration is found.
	bool "Build S1 variant of MCUBoot"
	help
	  Build upgrade candidate of MCUBoot for alternative slot S1.

config NSB_CRYPTO_CLIENT
	bool "Include Secure Bootloader crypto client API"
	help
	  Set this option to enable the crypto client API
	  which gives access to the cryptographic functions
	  from the secure bootloader. This will only work
	  when the secure bootloader is enabled.

config NSB_BOOTLOADER
	bool "Include Nordic Secure Boot bootloader"
	depends on !IS_NSB_BOOTLOADERLOADER
	select FW_METADATA
	select NSB_CRYPTO
	help
	  Set this option to enable the first stage bootloader which
	  verifies the signature of the app. This fulfills the role of B0.

if NSB_BOOTLOADER

module=B0
source "${ZEPHYR_BASE}/../nrf/subsys/partition_manager/Kconfig.template.build_strategy"

config NSB_PRIVATE_KEY_PROVIDED
	bool
	help
	  Hidden config specifying whether the build system has access to the
	  private key used for signing, and will use it to perform signing and
	  create the public key for the provision page.


choice NSB_SIGNING
	prompt "Firmware signing method"
	default NSB_SIGNING_PYTHON
	config NSB_SIGNING_PYTHON
		bool "Sign with Python ecdsa library."
		select NSB_PRIVATE_KEY_PROVIDED

	config NSB_SIGNING_OPENSSL
		bool "Sign with openssl command line tool."
		select NSB_PRIVATE_KEY_PROVIDED

	config NSB_SIGNING_CUSTOM
		bool "Sign with custom command."
endchoice

config NSB_SIGNING_KEY_FILE
	string
	prompt "Private key PEM file" if NSB_PRIVATE_KEY_PROVIDED
	default ""
	help
	  Absolute path to the private key PEM file.
	  Specifies the private key used for signing the firmware image.
	  The hash of the corresponding public key is stored as the first
	  entry in the list of public key hashes in the provision hex file.
	  This value can also be set by exporting an environment variable
	  named 'SB_SIGNING_KEY_FILE' or passing
	  '-DSB_SIGNING_KEY_FILE=/path/to/my/pem' when running cmake.
	  See also NSB_PUBLIC_KEY_FILES.

config NSB_SIGNING_COMMAND
	string
	prompt "Custom signing command" if !SB_PRIVATE_KEY_PROVIDED
	default ""
	help
	  This command will be called to produce a signature of the firmware.
	  It will be called as "${CONFIG_NSB_SIGNING_COMMAND} <file>"
	  The command must take calculate the signature over the the contents
	  of the <file> and write the signature to stdout.
	  The signature must be on DER format.

config NSB_SIGNING_PUBLIC_KEY
	string
	prompt "Public key PEM file" if !SB_PRIVATE_KEY_PROVIDED
	default ""
	help
	  Path to a PEM file.
	  When using a custom signing command, specify the corresponding public
	  key here. This public key is checked during building, and added to
	  the provision page as the first entry. See NSB_PUBLIC_KEY_FILES.

config NSB_PUBLIC_KEY_FILES
	string "Public Key PEM files"
	default ""
	help
	  Comma-separated list of absolute paths to public key pem files.
	  The provision hex file will contain a list of hashes of public keys.
	  The first public key hash is the one corresponding to the private
	  signing key used to sign the image. See NSB_SIGNING_KEY_FILE.
	  The hashes of the public keys specified in this configuration will be
	  placed after the aforementioned public key hash, in the order
	  they appear in this config.
	  If config is an empty string, 2 generated debug files
	  will be used.
	  Example value: ~/keys/pk1.pem,~/keys/pk2.pem,~/keys/pk3.pem


endif # NSB_BOOTLOADER

menuconfig IS_NSB_BOOTLOADERLOADER
	bool "Current app is bootloader"
	select NSB_CRYPTO
	select SW_VECTOR_RELAY if SOC_SERIES_NRF51X
	select FW_METADATA
	help
	  This option is set by the first stage bootloader app to include all
	  files and set all the options required.

if IS_NSB_BOOTLOADERLOADER

partition=B0
partition-size=0x8000
source "${ZEPHYR_BASE}/../nrf/subsys/partition_manager/Kconfig.template.partition_size"

menuconfig NSB_DEBUG
	bool "Printing"
	select BOOT_BANNER
	select PRINTK
	select CONSOLE
	select SERIAL

if NSB_DEBUG
choice NSB_DEBUG_BACKEND
	prompt "Where to print to"
	default NSB_DEBUG_UART

config NSB_DEBUG_UART
	bool "Print to UART."
	select UART_NRFX
	select UART_CONSOLE

config NSB_DEBUG_RTT
	bool "Print to RTT"
	select RTT_CONSOLE
	select USE_SEGGER_RTT
endchoice

config NSB_BPROT_IN_DEBUG
	bool "Enable block protect in debug"
	default y
	depends on (HAS_HW_NRF_BPROT || HAS_HW_NRF_MPU)

endif # NSB_DEBUG
endif # IS_NSB_BOOTLOADERLOADER

if IS_NSB_BOOTLOADERLOADER || NSB_BOOTLOADER
config NSB_FIRMWARE_INFO_OFFSET
	hex
	default FW_FIRMWARE_INFO_OFFSET

rsource "nsb_crypto/Kconfig"
endif # IS_NSB_BOOTLOADERLOADER || NSB_BOOTLOADER

